framework:
    messenger:
        failure_transport: failed

        transports:
            kafka_producer:
                dsn: '%env(KAFKA_URL)%'
                serializer: App\Controller\Command\KafkaSerializer
                options:
                    flushTimeout: 10000
                    flushRetries: 5
                    topic:
                        name: 'events'
            kafka_consumer:
                dsn: '%env(KAFKA_URL)%'
                serializer: App\Controller\Command\KafkaSerializer
                options:
                    commitAsync: true
                    receiveTimeout: 10000
                    topic:
                        name: "events"
                    kafka_conf:
                        enable.auto.offset.store: 'false'
                        group.id: 'my-group-id' # should be unique per consumer
                        max.poll.interval.ms: '45000'
                    topic_conf:
                        auto.offset.reset: 'earliest' #beginning
            rabbit_async:
                dsn:  '%env(MESSENGER_TRANSPORT_DSN)%/%2f/events'
                serializer: App\Controller\Command\RabbitSerializer
                retry_strategy:
                    max_retries: 3
                    # initial delay set to 5 seconds
                    delay: 5000
                    # each delay will be multiplied by 2
                    # so the delays will be 5s, 10s, 20s
                    multiplier: 2


            failed:
                dsn: "doctrine://default?queue_name=failed"
        routing:
            # async is whatever name you gave your transport above
            'App\Controller\Command\KafkaCommand': kafka_producer
            'App\Controller\Command\RabbitCommand': rabbit_async
